version: 2.1

# this allows you to use CircleCI's dynamic configuration feature
setup: true

# the continuation orb is required in order to use dynamic configuration
  
orbs:
  swissknife: roopakv/swissknife@0.37.0
  continuation: circleci/continuation@0.1.2
  # path-filtering: circleci/path-filtering@0.0.2

jobs:
  run-tests:
    executor: continuation/default
    # working_directory: /home/circleci/project/
    parameters:
      dir:
        type: string
        description: The directory to run tests for.
    steps:
      # - swissknife/sk-checkout:
      #     swissknife_sha: << pipeline.parameters.swissknife_sha >>
      - run:
          name: Run tests
          command: |
            cd << parameters.dir >>
            bash run_tests.sh
      - continuation/continue:
          parameters: '{}'
          configuration_path: configs/continue_config.yml
      # - path-filtering/filter:
      #     name: check-updated-files
      #     # 3-column, whitespace-delimited mapping. One mapping per
      #     # line:
      #     # <regex path-to-test> <parameter-to-set> <value-of-pipeline-parameter>
      #     mapping: |
      #       service1/.* run-build-service-1-job true
      #       service2/.* run-build-service-2-job true
      #     base-revision: main
      #     # this is the path of the configuration we should trigger once
      #     # path filtering and pipeline parameter value updates are
      #     # complete. In this case, we are using the parent dynamic
      #     # configuration itself.
      #     config-path: .circleci/continue_config.yml

  trigger-needed-workflows:
    docker:
      - image: circleci/node:12
    working_directory: /home/circleci/project/
    steps:
      - checkout
      - swissknife/trigger-workflows-for-all-modified:
          base-branch: master
          run-mode-for-base-branch: run_for_last_commit
          use-divergence-point: true
          code-param-name-map: '
            [
              {"regex": "^(clients|shared).*", "param_name": "run_client_workflow"},
              {"regex": "^(server|shared).*", "param_name": "run_server_workflow"},
              {"regex": "^(operations).*", "param_name": "run_operations_workflow"}
            ]'
          additional-param-map: '{"run_trigger_workflow": false}'
          use-swissknife-sha: true

workflows:
  client-tests:
    when: << pipeline.parameters.run_client_workflow >>
    jobs:
      - run-tests:
          dir: clients
          name: 'Client tests'
      - run-tests:
          dir: shared
          name: 'Shared tests'

  server-tests:
    when: << pipeline.parameters.run_server_workflow >>
    jobs:
      - run-tests:
          dir: server
          name: 'Server tests'
      - run-tests:
          dir: shared
          name: 'Shared tests'

  operations-tests:
    when: << pipeline.parameters.run_operations_workflow >>
    jobs:
      - run-tests:
          dir: operations
          name: 'Operations test'

  trigger-needed-workflows:
    when: << pipeline.parameters.run_trigger_workflow >>
    jobs:
      - trigger-needed-workflows

parameters:
  run_client_workflow:
    default: false
    type: boolean
  run_server_workflow:
    default: false
    type: boolean
  run_operations_workflow:
    default: false
    type: boolean
  run_trigger_workflow:
    default: true
    type: boolean
  swissknife_sha:
    default: ""
    type: string
